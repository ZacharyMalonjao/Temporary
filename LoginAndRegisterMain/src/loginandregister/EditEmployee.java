/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginandregister;

/**
 *
 * @author zach malonjao
 */
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import com.opencsv.CSVWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;


public class EditEmployee extends javax.swing.JFrame {
 private EmployeeCSVReader reader;
 private List<String[]> employeeDataBase;
 private String[] employeeData;
    /**
     * Creates new form EditEmployee
     */
 //Validation Methods
 
 //Names
    private boolean isValidString(String value) {
        value = value.trim(); 
        if (value.isEmpty()) {
            return false; 
        }
        String pattern = "^[a-zA-Z\\s]+$";
        return value.matches(pattern);
    }
    //Ignore
    private boolean isValidBirthday(String birthday) {
    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    sdf.setLenient(false);

    try {
        Date date = sdf.parse(birthday);
        return true; 
    } catch (ParseException e) {
        return false; 
    }
}
       
     private boolean isValidInteger(String value) {
        try {
            Integer.parseInt(value);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    } 
 //Philhealth    
     private boolean isValidPhilhealthNumber(String value) {
        String pattern = "^\\d{12}$";
        return value.matches(pattern);
}
   //phonenumber  
     private boolean isValidPhoneNumber(String phoneNumber) {
        String pattern = "^\\d{3}-\\d{3}-\\d{3}$";
        return phoneNumber.matches(pattern);
}
     //sss
     private boolean isValidSssNumber(String value){
        String pattern = "^\\d{2}-\\d{7}-\\d{1}$";  
        return value.matches(pattern);
     }
     //tin
     private boolean isValidTin(String value){
         String pattern = "^\\d{3}-\\d{3}-\\d{3}-\\d{3}$";
         return value.matches(pattern);
     }
   
    public EditEmployee(UserAccount userAcc) {
        initComponents();
        reader = new EmployeeCSVReader("MotorPH.csv");
        String employeeID = userAcc.getEmployeeID();
        employeeData = reader.searchEmployee(employeeID);
        
        
         jTextFieldEmpID.setText(employeeData[0]);
         
         employeeDataBase = reader.getEmployeeData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldNewValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEmpID = new javax.swing.JTextField();
        jComboBoxColumnName = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jTextFieldNewValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNewValueActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Insert New Info");

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Info to Update");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Chosen Employee ID:");

        jTextFieldEmpID.setEditable(false);
        jTextFieldEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmpIDActionPerformed(evt);
            }
        });

        jComboBoxColumnName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Last Name", "First Name", "Birthday", "Address", "Phone Number", "SSS #", "Philhealth #", "TIN #", "Pag-ibig #", "Status", "Position", "Immediate Supervisor", "Basic Salary", "Rice Subsidy", "Phone Allowance", "Clothing Allowance", "Gross Semi-monthly Rate", "Hourly Rate" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonSave)
                            .addComponent(jTextFieldNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSave)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNewValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNewValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNewValueActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
      
        //Grab column 
       int columnIndex=0;
       
       String selectedItem = (String)jComboBoxColumnName.getSelectedItem();
        String newValue = jTextFieldNewValue.getText();




 switch (selectedItem) {
    case "Last Name":
        if (isValidString(newValue)) {
               columnIndex = 1;
               } else {
                       JOptionPane.showMessageDialog(jButtonSave, "Invalid input.\n Please enter valid name ");
                       return; // Exit the method early if the birthday format is invalid
               }
                break;
    case "First Name":
        if (isValidString(newValue)) {
               columnIndex = 1;
               } else {
                       JOptionPane.showMessageDialog(jButtonSave, "Invalid input.\n Please enter valid name ");
                       return; // Exit the method early if the birthday format is invalid
               }
                break;
   case "Birthday":
         if (isValidBirthday(newValue)) {
                columnIndex = 3;
        } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid birthday format. Please use mm/dd/yy.");
                return; // Exit the method early if the birthday format is invalid
        }
         break;
         
    case "Address":
        columnIndex = 4;
        break;
    case "Phone Number":
         if (isValidPhoneNumber(newValue)) {
                columnIndex = 5;
        } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please format in xxx-xxx-xxx");
                return; // Exit the method early if the birthday format is invalid
        }
         break;

    case "SSS #":
        if (isValidSssNumber(newValue)){
        columnIndex = 6;}
        else{ 
            JOptionPane.showMessageDialog(jButtonSave, "Invalid input\nPlease format as xx-xxxxxxx-x");
            return;
        }
        break;
    case "Philhealth #":
         if (isValidPhilhealthNumber(newValue)) {
                columnIndex = 7;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please format as xxxxxxxxxxxx (12 digits).");
                return;
            }
            break;
    case "TIN #":
        if (isValidTin(newValue)){
            columnIndex = 8;
        }else{
           JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please format as xxx-xxx-xxx-xxx.");
                return; 
        }
        break;
    case "Pag-ibig #":
        columnIndex = 9;
        break;
  case "Status":
        if (newValue.equalsIgnoreCase("Regular") || newValue.equalsIgnoreCase("Probationary")) {
            columnIndex = 10;
        } else {
            JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please choose 'Regular' or 'Probationary'.");
            return;
        }
        break;
    case "Position":
      if (isValidString(newValue)) {
               columnIndex = 1;
               } else {
                       JOptionPane.showMessageDialog(jButtonSave, "Invalid input.\n Please enter valid string ");
                       return; // Exit the method early if the birthday format is invalid
               }
                break;
    case "Immediate Supervisor":
 if (isValidString(newValue)) {
               columnIndex = 1;
               } else {
                       JOptionPane.showMessageDialog(jButtonSave, "Invalid input.\n Please enter valid name ");
                       return; // Exit the method early if the birthday format is invalid
               }
                break;
    case "Basic Salary":
             if (isValidInteger(newValue)) {
                columnIndex = 13;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please enter a valid integer.");
                return;
            }
            break;
    case "Rice Subsidy":
             if (isValidInteger(newValue)) {
                columnIndex = 14;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please enter a valid integer.");
                return;
            }
            break;
    case "Phone Allowance":
              if (isValidInteger(newValue)) {
                columnIndex = 15;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please enter a valid integer.");
                return;
            }
            break;
    case "Clothing Allowance":
             if (isValidInteger(newValue)) {
                columnIndex = 16;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please enter a valid integer.");
                return;
            }
            break;
    case "Gross Semi-monthly Rate":
             if (isValidInteger(newValue)) {
                columnIndex = 17;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please enter a valid integer.");
                return;
            }
            break;
    case "Hourly Rate":
             if (isValidInteger(newValue)) {
                columnIndex = 18;
            } else {
                JOptionPane.showMessageDialog(jButtonSave, "Invalid input. Please enter a valid integer.");
                return;
            }
            break;
}

     
       
       

         
          employeeData[columnIndex]=newValue; 
          JOptionPane.showMessageDialog(jButtonSave, "Updated Succesfully\n Please click the refresh Button to view changes ");
           
      
   
       
       
       try {
        CSVWriter writer = new CSVWriter(new FileWriter("MotorPH.csv"),',', CSVWriter.NO_QUOTE_CHARACTER);

            for (String[] updatedRecord : employeeDataBase) {
                 writer.writeNext(updatedRecord);
            }
                 writer.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(jComboBoxColumnName, "Error writing to file: " + e.getMessage());
            }
          AdminPage admin = new AdminPage();
          admin.loadEmployeeData("MotorPH.csv");    
          
          
        
        

    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmpIDActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EditEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EditEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EditEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EditEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EditEmployee().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxColumnName;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldEmpID;
    private javax.swing.JTextField jTextFieldNewValue;
    // End of variables declaration//GEN-END:variables
}
